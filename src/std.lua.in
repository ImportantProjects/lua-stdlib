--- Lua standard library
-- <ul>
-- <li>TODO: Write a style guide (indenting/wrapping, capitalisation,
--   function and variable names); library functions should call
--   error, not die; OO vs non-OO (a thorny problem).</li>
-- <li>TODO: Add tests for each function immediately after the function;
--   this also helps to check module dependencies.</li>
-- <li>TODO: pre-compile.</li>
-- </ul>
local version = "General Lua libraries / @VERSION@"

for _, m in ipairs (require "modules") do
  _G[m] = require (m)
end

-- Inject stdlib extensions directly into global package namespaces.
_G.package = _G.package_ext
_G.string  = _G.string_ext
_G.table   = _G.table_ext

-- Maintain old interface access points.
local baseapis = { "require_version", "assert", "render", "tostring",
                   "prettytostring", "pickle" }
for _, api in ipairs {
  "assert",
  "pickle",
  "prettytostring",
  "render",
  "require_version",
  "tostring",
} do
  _G[api] = string_ext[api]
end

local M = {
  version = version,
}

return M
